plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

ext {
	springCloudVersion = "2022.0.4"
}

group = 'com.rider.riderservices'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation("org.springframework.boot:spring-boot-starter-amqp")
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0'
	implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.0'


	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'org.glassfish:jakarta.el:4.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.modelmapper:modelmapper:2.4.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'com.auth0:java-jwt:3.18.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}